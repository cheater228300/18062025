2. Массивы в языке Си. Примеры.
Теория
Массив в языке Си — это набор элементов одного типа, расположенных в непрерывной области памяти. Массивы позволяют хранить и обрабатывать большое количество данных.
Основные аспекты массивов:
•	Объявление: тип имя_массива[размер];. Например, int arr[5]; — массив из 5 целых чисел.
•	Индексация: Элементы массива индексируются с 0. Например, arr[0] — первый элемент.
•	Связь с указателями: Имя массива является указателем на его первый элемент.
•	Ограничения: Размер массива должен быть известен на этапе компиляции (для статических массивов). Динамические массивы создаются с помощью malloc.
Особенности:
•	Массивы передаются в функции как указатели, что позволяет изменять их элементы.
•	Выход за границы массива (например, обращение к arr[5] в массиве размером 5) приводит к неопределенному поведению.
Массив состоит из ячеек памяти, расположенных рядом, которые хранят значения одного и того же типа.
Свойства:
                Все элемента одного типа.
                Индексация с нуля.
                Отсутствие проверки границ для скорости.
                Имя массива это адрес первого элемента.
                Имя массива - константа.

Обьявление:
                тип имя [размер];//размер константа

Инициализация:
                тип имя[]={элементы,элементы};//размер сам считается
                с 99 стандарта разрешено использовать неконстанты.

Операции с массивами:
                Доступ к элементам с помощью индекса(arr[i]).
                Доступ с помощью указателя *arr и *(arr+i).
                Передача массива - передача имени массива(arr[]==*arr).

Примеры:
                Строки- массивы символов, в конце нулевой символ.
                Запись- scanf с %s или fgets  строки в массив.
                Сортировка- массивы хранят данные неотсортированные.
                Структуры- массивы хранят структуры.
                Динамическое выделение памяти(malloc и free)
